import { d as defineComponent, b as useRouter, a4 as useWorkflowHelpers, T as useWorkflowsStore, o as onMounted, c as openBlock, h as createElementBlock, i as createVNode, n as normalizeClass, m as resolveComponent, _ as _export_sfc } from "./index-DablXALM.js";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "TestDefinitionRootView",
  setup(__props) {
    const router = useRouter();
    const workflowHelpers = useWorkflowHelpers({ router });
    const workflowStore = useWorkflowsStore();
    async function initWorkflow() {
      const workflowId = router.currentRoute.value.params.name;
      const isAlreadyInitialized = workflowStore.workflow.id === workflowId;
      if (isAlreadyInitialized) return;
      const workflow = await workflowStore.fetchWorkflow(workflowId);
      void workflowHelpers.initState(workflow);
    }
    onMounted(initWorkflow);
    return (_ctx, _cache) => {
      const _component_router_view = resolveComponent("router-view");
      return openBlock(), createElementBlock("div", {
        class: normalizeClass(_ctx.$style.evaluationsView)
      }, [
        createVNode(_component_router_view)
      ], 2);
    };
  }
});
const evaluationsView = "_evaluationsView_qv3lh_123";
const style0 = {
  evaluationsView
};
const cssModules = {
  "$style": style0
};
const TestDefinitionRootView = /* @__PURE__ */ _export_sfc(_sfc_main, [["__cssModules", cssModules]]);
export {
  TestDefinitionRootView as default
};
