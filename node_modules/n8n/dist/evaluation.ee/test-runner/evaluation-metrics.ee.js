"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EvaluationMetrics = void 0;
class EvaluationMetrics {
    constructor(metricNames) {
        this.metricNames = metricNames;
        this.rawMetricsByName = new Map();
        for (const metricName of metricNames) {
            this.rawMetricsByName.set(metricName, []);
        }
    }
    addResults(result) {
        for (const [metricName, metricValue] of Object.entries(result)) {
            if (typeof metricValue === 'number' && this.metricNames.has(metricName)) {
                this.rawMetricsByName.get(metricName).push(metricValue);
            }
        }
    }
    getAggregatedMetrics() {
        const aggregatedMetrics = {};
        for (const [metricName, metricValues] of this.rawMetricsByName.entries()) {
            if (metricValues.length > 0) {
                const metricSum = metricValues.reduce((acc, val) => acc + val, 0);
                aggregatedMetrics[metricName] = metricSum / metricValues.length;
            }
        }
        return aggregatedMetrics;
    }
}
exports.EvaluationMetrics = EvaluationMetrics;
//# sourceMappingURL=evaluation-metrics.ee.js.map