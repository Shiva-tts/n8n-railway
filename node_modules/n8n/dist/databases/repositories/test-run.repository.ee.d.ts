import { DataSource, Repository } from '@n8n/typeorm';
import type { AggregatedTestRunMetrics } from '../../databases/entities/test-run.ee';
import { TestRun } from '../../databases/entities/test-run.ee';
import type { ListQuery } from '../../requests';
export declare class TestRunRepository extends Repository<TestRun> {
    constructor(dataSource: DataSource);
    createTestRun(testDefinitionId: string): Promise<TestRun>;
    markAsRunning(id: string, totalCases: number): Promise<import("@n8n/typeorm").UpdateResult>;
    markAsCompleted(id: string, metrics: AggregatedTestRunMetrics): Promise<import("@n8n/typeorm").UpdateResult>;
    markAsCancelled(id: string): Promise<import("@n8n/typeorm").UpdateResult>;
    incrementPassed(id: string): Promise<import("@n8n/typeorm").UpdateResult>;
    incrementFailed(id: string): Promise<import("@n8n/typeorm").UpdateResult>;
    getMany(testDefinitionId: string, options: ListQuery.Options): Promise<TestRun[]>;
}
